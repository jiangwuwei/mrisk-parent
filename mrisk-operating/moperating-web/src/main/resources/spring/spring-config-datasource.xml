<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
	           http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
	           http://www.springframework.org/schema/tx
	           http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">

	<tx:annotation-driven />
	
	<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:conf/*.properties</value>
			</list>
		</property>
		<property name="ignoreUnresolvablePlaceholders" value="true" />
	</bean>

	<bean id="jadeDataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
		<property name="driverClass" value="${jdbc.driverClassName}"></property>
		<property name="jdbcUrl" value="${jdbc.url}"></property>
		<property name="user" value="${jdbc.user}"></property>
		<property name="password" value="${jdbc.pwd}"></property>
		<!--连接池中保留的最小连接数。-->
		<property name="minPoolSize" value="${jdbc.minConnections}" />
		<!--连接池中保留的最大连接数。Default: 15 -->
		<property name="maxPoolSize" value="${jdbc.maxConnections}" />
		<!--最大空闲时间,1800秒内未使用则连接被丢弃。若为0则永不丢弃。Default: 0 -->
		<property name="maxIdleTime" value="1800" />
		<!--当连接池中的连接耗尽的时候c3p0一次同时获取的连接数。Default: 3 -->
		<property name="initialPoolSize" value="${jdbc.initialPoolSize}" />
		<property name="acquireIncrement" value="3" />
		<property name="maxStatements" value="2000" />
		<!--每180秒检查所有连接池中的空闲连接。Default: 0 -->
		<property name="idleConnectionTestPeriod" value="${jdbc.idleTimeoutSec}" />
		<!--定义在从数据库获取新连接失败后重复尝试的次数。Default: 30 -->
		<property name="acquireRetryAttempts" value="30" />
		<property name="breakAfterAcquireFailure" value="true" />
		<property name="testConnectionOnCheckout" value="false" />
	</bean>

	<bean id="operatingDataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
		<property name="driverClass" value="${jdbc.driverClassName}"></property>
		<property name="jdbcUrl" value="${jdbc.operating.url}"></property>
		<property name="user" value="${jdbc.operating.user}"></property>
		<property name="password" value="${jdbc.operating.pwd}"></property>
		<!--连接池中保留的最小连接数。-->
		<property name="minPoolSize" value="${jdbc.minConnections}" />
		<!--连接池中保留的最大连接数。Default: 15 -->
		<property name="maxPoolSize" value="${jdbc.maxConnections}" />
		<!--最大空闲时间,1800秒内未使用则连接被丢弃。若为0则永不丢弃。Default: 0 -->
		<property name="maxIdleTime" value="1800" />
		<!--当连接池中的连接耗尽的时候c3p0一次同时获取的连接数。Default: 3 -->
		<property name="initialPoolSize" value="${jdbc.initialPoolSize}" />
		<property name="acquireIncrement" value="3" />
		<property name="maxStatements" value="2000" />
		<!--每180秒检查所有连接池中的空闲连接。Default: 0 -->
		<property name="idleConnectionTestPeriod" value="${jdbc.idleTimeoutSec}" />
		<!--定义在从数据库获取新连接失败后重复尝试的次数。Default: 30 -->
		<property name="acquireRetryAttempts" value="30" />
		<property name="breakAfterAcquireFailure" value="true" />
		<property name="testConnectionOnCheckout" value="false" />
	</bean>

	<bean id="shardingDataSource" class="com.zoom.risk.platform.sharding.dbrouter.ShardingDataSource">
		<property name="dsKeyHolder" ref="dsKeyHolder" />
		<property name="defaultTargetDataSource" ref="operatingDataSource" />
		<property name="targetDataSources">
			<map>
				<entry key="1" value-ref="jadeDataSource" />
				<entry key="3" value-ref="operatingDataSource" />
			</map>
		</property>
	</bean>

	<bean id="dsKeyHolder" class="com.zoom.risk.platform.sharding.dbrouter.DsKeyHolder">
		<property name="defaultValue" value="3" />
	</bean>

	<bean id="sessionManager" class="com.zoom.risk.platform.sharding.dbsharding.SessionManagerImpl">
		<property name="dsKeyHolder" ref="dsKeyHolder" />
	</bean>

	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="shardingDataSource" />
	</bean>

	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="shardingDataSource" />
	</bean>
	

	
</beans>