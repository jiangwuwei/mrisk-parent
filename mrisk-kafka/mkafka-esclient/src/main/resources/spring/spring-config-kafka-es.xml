<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:task="http://www.springframework.org/schema/task"
       xsi:schemaLocation="http://www.springframework.org/schema/beans 
    		http://www.springframework.org/schema/beans/spring-beans.xsd
            http://www.springframework.org/schema/task
            http://www.springframework.org/schema/task/spring-task-4.0.xsd"
       default-autowire="byName">

	<bean id="kafkaConsumerStartService" class="com.zoom.risk.platform.kafka.consumer.service.impl.KafkaConsumerStartupServiceImpl" init-method="startup" destroy-method="shutdown" >
		<property name="consumerThreadPoolExecutor" ref="kafkaConsumerThreadPoolExecutor" />
		<property name="esActionService" ref="esActionService" />
		<property name="kafkaConfig" ref="esConfig" />
		<property name="numOfStreams" value="2" />
	</bean>

	<bean id="esConfig" class="com.zoom.risk.platform.kafka.consumer.util.EsConfig">
		<property name="topic" value="${kafka.topic}" />
		<property name="zookeeperConnect" value="${kafka.zookeeper.connect}" />
		<property name="keySerializer" value="${kafka.serializer.class}" />
		<property name="valueSerializer" value="${kafka.serializer.class}" />
		<property name="groupId" value="${kafka.group.id}" />
	</bean>

	<!--kafka消费者-->
	<bean id="kafkaConsumerThreadPoolExecutor" class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
		<property name="corePoolSize" value="${kafka.consumer.thread.corePoolSize}" />
		<property name="maxPoolSize" value="${kafka.consumer.thread.maxPoolSize}" />
		<property name="queueCapacity" value="${kafka.consumer.thread.queueCapacity}" />
		<property name="keepAliveSeconds" value="300" />
		<property name="rejectedExecutionHandler">
			<bean class="java.util.concurrent.ThreadPoolExecutor$CallerRunsPolicy" />
		</property>
	</bean>

</beans>